<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description>Simple script to demonstrate some PCells</description>
 <version/>
 <category>pymacros</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <priority>0</priority>
 <shortcut/>
 <show-in-menu>false</show-in-menu>
 <group-name/>
 <menu-path/>
 <interpreter>python</interpreter>
 <dsl-interpreter-name/>
 <text>


import pya
from kqcircuits.klayout_view import KLayoutView

from kqcircuits.elements.finger_capacitor_square import FingerCapacitorSquare
from kqcircuits.elements.finger_capacitor_taper import FingerCapacitorTaper
from kqcircuits.elements.airbridges.airbridge_rectangular import AirbridgeRectangular
from kqcircuits.junctions.sim import Sim
from kqcircuits.test_structures.stripes_test import StripesTest
from kqcircuits.elements.waveguide_composite import WaveguideComposite
from kqcircuits.elements.fluxlines.fluxline_straight import FluxlineStraight
from kqcircuits.elements.fluxlines.fluxline_standard import FluxlineStandard

from kqcircuits.qubits.double_pads import DoublePads

view = KLayoutView()

def place(cls, x, y, **params):
  view.insert_cell(cls, pya.DTrans(pya.DVector(x, y)), **params)


place(FingerCapacitorSquare, -20, 900, finger_number=3)
place(FingerCapacitorTaper, 120, 900)

place(AirbridgeRectangular, 0, 800)

place(DoublePads, 0, 700)
place(Sim, 100, 700)

place(WaveguideComposite, -50, 600)

place(StripesTest, 50, 400)

place(FluxlineStandard, 0, 350)

view.focus()
</text>
</klayout-macro>
