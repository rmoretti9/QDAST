<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description>Number of instances with a specific cell name in top cell</description>
 <version/>
 <category>pymacros</category>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun>
 <autorun-early>false</autorun-early>
 <shortcut/>
 <show-in-menu>false</show-in-menu>
 <group-name/>
 <menu-path/>
 <interpreter>python</interpreter>
 <dsl-interpreter-name/>
 <text># This code is part of KQCircuits
# Copyright (C) 2021 IQM Finland Oy
#
# This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program. If not, see
# https://www.gnu.org/licenses/gpl-3.0.html.
#
# The software distribution should follow IQM trademark policy for open-source software
# (meetiqm.com/developers/osstmpolicy). IQM welcomes contributions to the code. Please see our contribution agreements
# for individuals (meetiqm.com/developers/clas/individual) and organizations (meetiqm.com/developers/clas/organization).


from kqcircuits.klayout_view import KLayoutView

"""Counts the number of instances with a given cell name in top cell.

All instances of the cell below top cell are counted.

Usage:
1. change the cell_name if needed
2. choose the top cell
3. run the macro
"""

cell_name = Airbridge.default_type

top_cell = KLayoutView(current=True).active_cell

def count_instances_in_cell(cell_idx):
    # workaround for getting the cell due to KLayout bug, see
    # https://www.klayout.de/forum/discussion/1191/cell-shapes-cannot-call-non-const-method-on-a-const-reference
    # TODO: replace by `cell = obj.inst().cell` once KLayout bug is fixed
    cell = top_cell.layout().cell(cell_idx)
    n = 0
    if cell.name == cell_name:
        n += 1
    for inst in cell.each_inst():
        n += count_instances_in_cell(inst.cell.cell_index())
    return n

n_elements = count_instances_in_cell(top_cell.cell_index())

print("Number of instances with cell name \"{}\": {}".format(cell_name, n_elements))
</text>
</klayout-macro>
